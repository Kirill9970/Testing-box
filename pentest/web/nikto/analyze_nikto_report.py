import sys
from pathlib import Path
from datetime import datetime
import re

HTML_TEMPLATE = '''
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Отчет Nikto</title>
    <style>
        body {{ font-family: Arial, sans-serif; margin: 40px; background: #f8f9fa; }}
        h1 {{ color: #2c3e50; }}
        h2 {{ color: #1a5276; margin-top: 40px; }}
        table {{ border-collapse: collapse; width: 100%; margin: 20px 0; background: #fff; }}
        th, td {{ border: 1px solid #ccc; padding: 10px 16px; text-align: left; vertical-align: top; }}
        th {{ background: #e9ecef; }}
        .desc {{ margin-top: 30px; color: #555; }}
        .summary-table {{ width: 60%; margin-bottom: 30px; }}
        .problems-table {{ width: 100%; }}
        .problem-high {{ color: #c0392b; font-weight: bold; }}
        .problem-medium {{ color: #e67e22; }}
        .problem-low {{ color: #2980b9; }}
        .block {{ background: #f4f4f4; border-radius: 4px; padding: 8px; font-family: monospace; white-space: pre-wrap; max-height: 300px; overflow: auto; }}
        .recommendation {{ color: #444; font-size: 1.05em; margin: 10px 0 20px 0; }}
    </style>
</head>
<body>
    <h1>Отчет по результатам сканирования Nikto</h1>
    <div class="desc">
        <h2>Сводка</h2>
        <table class="summary-table">
            <tr><th>Целевой хост</th><td>{target_host}</td></tr>
            <tr><th>Порт</th><td>{target_port}</td></tr>
            <tr><th>Всего найдено проблем</th><td>{problems_count}</td></tr>
        </table>
        <h2>Как читать этот отчет</h2>
        <ul>
            <li>В таблице ниже — все найденные проблемы и рекомендации.</li>
            <li>Описание и ссылка помогут понять, почему это важно и что делать.</li>
        </ul>
    </div>
    {problems_table}
    <div class="desc">
        <h2>Рекомендации</h2>
        <ul>
            <li>Добавьте недостающие security headers (см. ссылки).</li>
            <li>Проверьте конфигурацию веб-сервера и приложения.</li>
            <li>Используйте современные best-practices для защиты HTTP.</li>
        </ul>
    </div>
</body>
</html>
'''

def parse_nikto_txt(path):
    target_host = '-'
    target_port = '-'
    problems = []
    with open(path, encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if line.startswith('+ Target Host:'):
                target_host = line.split(':', 1)[1].strip()
            elif line.startswith('+ Target Port:'):
                target_port = line.split(':', 1)[1].strip()
            elif line.startswith('+ GET') or line.startswith('+ POST'):
                # Пример: + GET /: Suggested security header missing: content-security-policy. See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP:
                m = re.match(r'\+ (GET|POST) (.*?): (.*?)(?:\. See: (.*))?:?$', line)
                if m:
                    method = m.group(1)
                    path = m.group(2)
                    description = m.group(3)
                    link = m.group(4) if m.group(4) else '-'
                    problems.append({
                        'method': method,
                        'path': path,
                        'description': description,
                        'link': link
                    })
    return target_host, target_port, problems

def render_problems_table(problems):
    if not problems:
        return '<h2>Нет найденных проблем или файл отчета пустой.</h2>'
    rows = ['''<tr><th>#</th><th>Метод</th><th>Путь</th><th>Описание</th><th>Ссылка</th></tr>''']
    for i, p in enumerate(problems):
        link_html = f'<a href="{p["link"]}" target="_blank">{p["link"]}</a>' if p["link"] != '-' else '-'
        rows.append(f'<tr>'
                    f'<td>{i+1}</td>'
                    f'<td>{p["method"]}</td>'
                    f'<td>{p["path"]}</td>'
                    f'<td>{p["description"]}</td>'
                    f'<td>{link_html}</td>'
                    f'</tr>')
    return f'<table class="problems-table">' + '\n'.join(rows) + '</table>'

def main():
    if len(sys.argv) < 2:
        print('Usage: python3 analyze_nikto_report.py <nikto_report.txt>')
        sys.exit(1)
    input_path = Path(sys.argv[1])
    dt_str = datetime.now().strftime('%Y%m%d_%H%M%S')
    output_path = Path(__file__).resolve().parents[3] / 'reports' / 'pentest' / 'nikto' / f'nikto_report_{dt_str}.html'
    target_host, target_port, problems = parse_nikto_txt(input_path)
    problems_table = render_problems_table(problems)
    html = HTML_TEMPLATE.format(
        target_host=target_host,
        target_port=target_port,
        problems_count=len(problems),
        problems_table=problems_table
    )
    output_path.parent.mkdir(parents=True, exist_ok=True)
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write(html)
    print(f'HTML-отчет сгенерирован: {output_path}')

if __name__ == '__main__':
    main() 